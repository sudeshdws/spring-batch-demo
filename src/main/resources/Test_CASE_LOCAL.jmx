<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PPP Test Plan LOCAL" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET server up" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST create application" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;isExistingBusinessCustomer&quot;: false,&#xd;
  &quot;isApplicationByBusinessOwner&quot;: false,&#xd;
  &quot;isAnotherPPPApplied&quot;: false,&#xd;
  &quot;isSuspectedBusinessCustomer&quot;: false,&#xd;
  &quot;isPayingSalariesAndTaxes&quot;: false,&#xd;
  &quot;hasTakenBadLoan&quot;: false,&#xd;
  &quot;hasActiveCriminalCases&quot;: false,&#xd;
  &quot;hasActiveCriminalCasesMinor&quot;: false,&#xd;
  &quot;isBusinessOwnerUSCitizen&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/create-application</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">uuid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.uuid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST declarations" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;declarationForYourself&quot;: {&#xd;
    &quot;publicOrForeignFigure&quot;: true,&#xd;
    &quot;publicOrForeignFigureDetails&quot;: &quot;Name, Relationship and Position&quot;,&#xd;
    &quot;isOwnerEmployeeOfBank&quot;: true,&#xd;
    &quot;bankEmployeeName&quot;: &quot;Romi&quot;&#xd;
  },&#xd;
  &quot;declarationForBusiness&quot;: {&#xd;
    &quot;declarationDetails&quot;: {&#xd;
      &quot;publicOrForeignFigure&quot;: true,&#xd;
      &quot;publicOrForeignFigureDetails&quot;: &quot;Name, Relationship and Position&quot;,&#xd;
      &quot;isOwnerEmployeeOfBank&quot;: true,&#xd;
      &quot;bankEmployeeName&quot;: &quot;Masih&quot;&#xd;
    },&#xd;
    &quot;isInvolvedInInternetGambling&quot;: true,&#xd;
    &quot;typeOfInternetGambling&quot;: &quot;CS GO&quot;,&#xd;
    &quot;changeInOwnership&quot;: true,&#xd;
    &quot;changeInOwnershipReason&quot;: &quot;Just for fun&quot;&#xd;
  },&#xd;
  &quot;personalAgreementsAcceptance&quot;: true,&#xd;
  &quot;businessAgreementsAcceptance&quot;: true,&#xd;
  &quot;disclosureAcceptance&quot;: true&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/declarations/${uuid}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST business information" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;legalBusinessName&quot;: &quot;New business&quot;,&#xd;
  &quot;tradeName&quot;: &quot;Traders Co.&quot;,&#xd;
  &quot;tin&quot;: 12345,&#xd;
  &quot;legalStructure&quot;: {&#xd;
    &quot;legalStructureName&quot;: &quot;soleProprietor&quot;,&#xd;
    &quot;otherLegalStructure&quot;: &quot;Very funny structure&quot;&#xd;
  },&#xd;
  &quot;state&quot;: &quot;State of disaster&quot;,&#xd;
  &quot;dateOfEstablishment&quot;: &quot;2020-04-11&quot;,&#xd;
  &quot;businessAddress&quot;: {&#xd;
    &quot;isBusinessPropertyOwned&quot;: true,&#xd;
    &quot;address&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;Address line 1&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;Address line 2&quot;,&#xd;
      &quot;city&quot;: &quot;Bangalore&quot;,&#xd;
      &quot;state&quot;: &quot;Karnataka&quot;,&#xd;
      &quot;zipCode&quot;: &quot;12345&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;mailingAddress&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;Address line 1&quot;,&#xd;
    &quot;addressLine2&quot;: &quot;Address line 2&quot;,&#xd;
    &quot;city&quot;: &quot;Bangalore&quot;,&#xd;
    &quot;state&quot;: &quot;Karnataka&quot;,&#xd;
    &quot;zipCode&quot;: &quot;12345&quot;&#xd;
  },&#xd;
  &quot;taxes&quot;: {&#xd;
    &quot;taxesFilledInLast18Months&quot;: true,&#xd;
    &quot;taxesFilled&quot;: {&#xd;
      &quot;reportedGrossAnnualRevenue&quot;: 1000,&#xd;
      &quot;reportedBusinessNetIncome&quot;: 500,&#xd;
      &quot;revenueDate&quot;: &quot;2020-04-11&quot;&#xd;
    },&#xd;
    &quot;taxesNotFilled&quot;: {&#xd;
      &quot;projectedGrossAnnualRevenue&quot;: 2000,&#xd;
      &quot;projectedBusinessNetIncome&quot;: 2000,&#xd;
      &quot;fiscalYearEndDate&quot;: &quot;2020-04-11&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;industryInformation&quot;: {&#xd;
    &quot;natureOfBusiness&quot;: &quot;string&quot;,&#xd;
    &quot;industry&quot;: {&#xd;
      &quot;industryName&quot;: &quot;Manufacturing&quot;,&#xd;
      &quot;otherIndustry&quot;: &quot;Gaming&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;employees&quot;: {&#xd;
    &quot;currentEmployeeCount&quot;: 50,&#xd;
    &quot;newEmployeeHireCount&quot;: 10&#xd;
  },&#xd;
  &quot;companyRelationship&quot;: {&#xd;
    &quot;affiliatedCompanyRelationship&quot;: true,&#xd;
    &quot;affliatedCompanyName&quot;: &quot;EA Sports&quot;&#xd;
  },&#xd;
  &quot;accountBalances&quot;: {&#xd;
    &quot;checkingAccountBalance&quot;: 1000,&#xd;
    &quot;otherBusinessCheckingAccount&quot;: &quot;Activision&quot;,&#xd;
    &quot;otherAmountToBeTransferToBank&quot;: 500&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business-information/${uuid}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST loan amount details" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;totalAvgMonthlyPayrollAmount&quot;: 0,&#xd;
  &quot;calculatedTotalAvgMonthlyPayrollAmount&quot;: 0,&#xd;
  &quot;sbaDisasterLoan&quot;: 0,&#xd;
  &quot;maxRequestAmount&quot;: 0,&#xd;
  &quot;totalLoanAmountApplied&quot;: 0,&#xd;
  &quot;typeOfBusiness&quot;: &quot;nonTribalSmallBusiness&quot;,&#xd;
  &quot;goodFaithBorrowerCertification&quot;: true,&#xd;
  &quot;loanPurpose&quot;: {&#xd;
    &quot;loanPurposeName&quot;: &quot;other&quot;,&#xd;
    &quot;otherLoanPurpose&quot;: &quot;otherLoan23333333666&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/loan-amount-details/${uuid}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST owner information" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;ownerDetails&quot;: {&#xd;
    &quot;firstName&quot;: &quot;vicky&quot;,&#xd;
    &quot;lastName&quot;: &quot;choudhary&quot;,&#xd;
    &quot;email&quot;: &quot;user@example.com&quot;,&#xd;
    &quot;phone&quot;: &quot;1212121212&quot;,&#xd;
    &quot;birthDate&quot;: &quot;04-11-1988&quot;&#xd;
    },&#xd;
    &quot;homeAddress&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;Electronic City Phase 1&quot;,&#xd;
    &quot;addressLine2&quot;: &quot;Bangalore&quot;,&#xd;
    &quot;city&quot;: &quot;Bangalore&quot;,&#xd;
    &quot;state&quot;: &quot;Karnataka&quot;,&#xd;
    &quot;zipCode&quot;: &quot;56006&quot;&#xd;
  },&#xd;
  &quot;citizenship&quot;: {&#xd;
    &quot;isBusinessOwnerCitizen&quot;: true,&#xd;
    &quot;ssn&quot;: 123456789,&#xd;
    &quot;legalPermanentResident&quot;: {&#xd;
      &quot;legalPermanentResidentStatus&quot;: true,&#xd;
      &quot;ssn&quot;: 123456789,&#xd;
      &quot;foreignIdType&quot;: &quot;ABCD1234&quot;,&#xd;
      &quot;foreignIdNumber&quot;: &quot;ABC123&quot;,&#xd;
      &quot;countryId&quot;: &quot;USA&quot;,&#xd;
      &quot;issuanceDate&quot;: &quot;2020-04-11&quot;,&#xd;
      &quot;expirationDate&quot;: &quot;2020-04-11&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;entityOwnership&quot;: {&#xd;
    &quot;entityOwnershipStatus&quot;: true,&#xd;
    &quot;ownershipCompanyName&quot;: &quot;ABC.COM&quot;&#xd;
  },&#xd;
  &quot;businessOwnership&quot;: {&#xd;
    &quot;percentageOwned&quot;: 50,&#xd;
    &quot;officerTitle&quot;: &quot;Mr Perek&quot;,&#xd;
    &quot;ownerSince&quot;: &quot;2020-04-11&quot;,&#xd;
    &quot;additionalOwners&quot;: [&#xd;
      {&#xd;
        &quot;addtionalOwnerDetails&quot;: {&#xd;
          &quot;firstName&quot;: &quot;Mr Homes&quot;,&#xd;
          &quot;lastName&quot;: &quot;Gomes&quot;,&#xd;
          &quot;email&quot;: &quot;user@example.com&quot;,&#xd;
          &quot;phone&quot;: 19191919199,&#xd;
          &quot;birthDate&quot;: &quot;1988-04-11&quot;&#xd;
        },&#xd;
        &quot;businessPercentageOwned&quot;: 50&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
   &quot;beneficialOwners&quot;: {&#xd;
    &quot;managerOfLegalEntity&quot;: &quot;Myself&quot;,&#xd;
    &quot;nonOwnerEmployee&quot;: {&#xd;
      &quot;details&quot;: {&#xd;
        &quot;firstName&quot;: &quot;Jems&quot;,&#xd;
        &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
        &quot;email&quot;: &quot;user@example.com&quot;,&#xd;
        &quot;phone&quot;: 0,&#xd;
        &quot;birthDate&quot;: &quot;2020-04-11&quot;&#xd;
      },&#xd;
      &quot;officerTitle&quot;: &quot;BUsiness&quot;,&#xd;
      &quot;address&quot;: {&#xd;
        &quot;addressLine1&quot;: &quot;City Center&quot;,&#xd;
        &quot;addressLine2&quot;: &quot;City Center&quot;,&#xd;
        &quot;city&quot;: &quot;NYC&quot;,&#xd;
        &quot;state&quot;: &quot;12345&quot;,&#xd;
        &quot;zipCode&quot;: &quot;12345&quot;&#xd;
      },&#xd;
      &quot;citizenship&quot;: {&#xd;
        &quot;isBusinessOwnerCitizen&quot;: true,&#xd;
        &quot;ssn&quot;: 1212121314,&#xd;
        &quot;legalPermanentResident&quot;: {&#xd;
          &quot;legalPermanentResidentStatus&quot;: true,&#xd;
          &quot;ssn&quot;: 123123123,&#xd;
          &quot;foreignIdType&quot;: &quot;ABC11&quot;,&#xd;
          &quot;foreignIdNumber&quot;: &quot;ABC123&quot;,&#xd;
          &quot;countryId&quot;: &quot;USA&quot;,&#xd;
          &quot;issuanceDate&quot;: &quot;2020-04-11&quot;,&#xd;
          &quot;expirationDate&quot;: &quot;2020-04-11&quot;&#xd;
        }&#xd;
      }&#xd;
    },&#xd;
    &quot;isConfirmationProvided&quot;: true&#xd;
  },&#xd;
  &quot;bankAccountNumber&quot;: 1234567&#xd;
 &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/owner-information/${uuid}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST documents" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;personalDocuments&quot;: &quot;https://ppp-s3-bucket.s3.amazonaws.com/5e932d579ff0149f47350260/5e932d579ff0149f47350260_coid-19-loan.JPG&quot;,&#xd;
  &quot;businessDocuments&quot;: {&#xd;
    &quot;payCheckProtectionForm&quot;: &quot;www.google.com&quot;,&#xd;
    &quot;optionalDocuments&quot;: {&#xd;
      &quot;irsForm940&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;irsForm941&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;irsForm944&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;irsForm1099&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;workPlaceHealthBenefits&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;workPlaceRetirementBenefits&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;workPlaceOtherBenefits&quot;: &quot;www.google.com&quot;&#xd;
    },&#xd;
    &quot;otherDocuments&quot;: [&#xd;
      {&#xd;
        &quot;downloadUrl&quot;: &quot;www.google.com&quot;,&#xd;
        &quot;description&quot;: &quot;string&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;payrollDocuments&quot;: {&#xd;
    &quot;recentPayrollStatement&quot;: &quot;www.google.com&quot;,&#xd;
    &quot;optionalDocuments&quot;: {&#xd;
      &quot;month1PayrollStatement&quot;: &quot;www.google.com&quot;,&#xd;
      &quot;month1PayrollWithdrawalStatement&quot;: &quot;www.google.comT&quot;&#xd;
    },&#xd;
    &quot;otherDocuments&quot;: [&#xd;
      {&#xd;
        &quot;downloadUrl&quot;: &quot;www.google.com&quot;,&#xd;
        &quot;description&quot;: &quot;www.google.com&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/documents/${uuid}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
